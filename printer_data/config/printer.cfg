[include mmu/addons/blobifier_trident.cfg]
#[include mmu/optional/mmu_ercf_compat.cfg]
[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
[include mmu/optional/mmu_menu.cfg]
#[include KAMP_Settings.cfg]

[include stealthburner_leds.cfg]

[include input_shaper.cfg] ; uncomment once CANBUS is working

[include mainsail.cfg]

[exclude_object]

[include timelapse.cfg]



# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
# serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2E0022001950534841313020-if00
serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2:1.0
restart_method: command
##--------------------------------------------------------------------

[mcu sb2040]
canbus_uuid: c871e3866941  # previous SB2040 V1 was UUID = c832fdfbcf62

[printer]
kinematics: corexy
max_velocity: 600           #updated to 600 from 300 for based on the Ellis max Speed and Accel Ellis testing, 3/19/22 input shaper testing had Y max accel at 4900 and 9900 for X
max_accel: 4000             #reset to 4000, 3/19/22 input shaper testing had Y max accel at 4900 and 9900 for X
max_accel_to_decel: 2000    #added line per the Ellis guide recommendation of 1/2 the max_accel
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350             #was 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12

enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  ; set to 400 for 0.9 degree stepper

#endstop_pin: !sb2040:gpio29 ;was !PG12 prior to x-endstop on the SB2040 CAN toolhead
endstop_pin: tmc2209_stepper_x:virtual_endstop

position_min: 0
##--------------------------------------------------------------------

position_endstop: 357
position_max: 357

##--------------------------------------------------------------------
homing_speed: 25   ;Max 100  11/24/22 was 25, revised to 20 per the Voron Sensorless XY Homing instructions which state it should be half of the rotation_distance value
homing_retract_dist: 0 ; 11/24/22 was 5, revised to 0 per the Voron Sensorless XY Homing instructions
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False

run_current: 1.1 ; 12/15/22 was 1.4, lowered to 1.1 thinking motor overheating was causing sensorless homing issues - default was 0.8 (40% of 2A consider max as 70% 1.4A - A motor only got to 75C when running 1.2A on closed chamber 2 hour print)
# hold_current: 0.98 ; 12/15/22 commented out per Ellis Guide and sensorless homing Klipper guide, trying 0 as steppers felt hot after long on/soak time - added in hold_current at 70% of run_current per the Ellis guide.  If I return to 0.8 run current then hold current line can be removed - 11/24/22 per Klipper Sensorless Homing Guide "When using sensorless homing on CoreXY, make sure there is no hold_current configured for either stepper".  I think this is supposed to mean that hold and run current should be the same but I will leave it as is for now.


sense_resistor: 0.110
stealthchop_threshold: 0

diag_pin: ^PG6 ; 
driver_SGTHRS: 72	 ; Use Klipper tuning guide here https://www.klipper3d.org/TMC_Drivers.html 

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  ; set to 400 for 0.9 degree stepper
endstop_pin: !PG12        ; 11/24/22 commented out for Sensorless Homing and revised to the below per the Voron Sensorless XY Homing Instructions
#endstop_pin: tmc2209_stepper_y:virtual_endstop

position_min: 0
##--------------------------------------------------------------------

position_endstop: 353
position_max: 353

##--------------------------------------------------------------------
homing_speed: 25   ;Max 100  11/24/22 was 25, revised to 20 per the Voron Sensorless XY Homing instructions which state it should be half of the rotation_distance value
homing_retract_dist: 5 ; 11/24/22 was 5, revised to 0 per the Voron Sensorless XY Homing instructions
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False

run_current: 1.1 ; 12/15/22 was 1.4, lowered to 1.1 thinking motor overheating was causing sensorless homing issues - default was 0.8 (40% of 2A consider max as 70% 1.4A - A motor only got to 75C when running 1.2A on closed chamber 2 hour print)
# hold_current: 0.98 ; 12/15/22 commented out per Ellis guide and sensorless homing Klipper guide, trying 0 as steppers felt hot after long on/soak time - added in hold_current at 70% of run_current per the Ellis guide.  If I return to 0.8 run current then hold current line can be removed - 11/24/22 commented out per Klipper Sensorless Homing Guide "When using sensorless homing on CoreXY, make sure there is no hold_current configured for either stepper".   I think this is supposed to mean that hold and run current should be the same but I will leave it as is for now.

sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4 
microsteps: 32
endstop_pin: probe:z_virtual_endstop # was PG10 before TAP
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 232
position_min: -5    #3/2/24 - was -2.5 but starte getting "No trigger on probe after full movement"
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: sb2040:gpio9
dir_pin: sb2040:gpio10 
enable_pin: !sb2040:gpio7

max_extrude_only_velocity: 200.0
max_extrude_only_distance: 200.0
max_extrude_cross_section: 50.0
#Maximum length (in mm of raw filament) that a retraction or
#extrude-only move may have. If a retraction or extrude-only move
#requests a distance greater than this value it will cause an error
#to be returned. The default is 50mm.

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 45.6754   #2/23/24- 47.088=0.97, was 23.155209 for CW2
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 50:10 for CW2
##  Use 80:20 for M4, M3.1
gear_ratio: 9:1               #2/23/24- was 50:10 for CW2 BMG Gear Ratio
microsteps: 16    #2/23/24- was 32 for CW2
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75

heater_pin: sb2040:gpio6

##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
#sensor_type: Generic 3950  # for Dragon HF
sensor_type: PT1000 # for Rapido HF
pullup_resistor: 4700
sensor_pin: sb2040:gpio27  
min_temp: 10
max_temp: 280
max_power: 1.0
min_extrude_temp: 200  # 5/25/24 - lowered from 220 for Gizmdorls TPU - 2/1/24 was 170, set to 0 for ERCF Filamentalist buffer testing
#control = pid ; 1/8/23 - these were the values from the Klipper PID routine that seemed unstable - manually made changes to the save_config section at the end of this file
# pid_kp = 22.561  ;18
# pid_ki = 1.857  ;1.5
# pid_kd = 68.532  ;40
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.03
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: sb2040:gpio8
interpolate: false
run_current: 0.6   # 2/23/24- was 0.5 for CW2
sense_resistor: 0.110
stealthchop_threshold: 0



[firmware_retraction]
retract_length = 0.8
retract_speed = 80
unretract_extra_length = 0
unretract_speed = 80




#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.75
min_temp: 0
max_temp: 125
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
# max_error: 240
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
# check_gain_time: 120
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Probe
#####################################################################

[probe]
##  TAP Probe

pin: ^!sb2040:gpio25  #6/22/24 !sb2040:gpio25 - was gpio28

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0 # was 25 before TAP
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %} 
    {% set MAX_TEMP = PROBE_TEMP + 10 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

###############################################
#### Printer Enclosure Temp Sensor Section ####
###############################################
[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950


#####################################################
#### Filamentalist Enclosure Temp Sensor Section ####
#####################################################
#[temperature_sensor Filament_Enclosure]
#sensor_type: BME280
#i2c_address: 118
##   Default is 118 (0x76). The BMP180, BMP388 and some BME280 sensors have an address of 119 (0x77).
#i2c_mcu: mcu
#i2c_bus: i2c3  #i2c3, i2c1a
#i2c_software_scl_pin: PB8
#i2c_software_sda_pin: PB9
#i2c_speed: 100000
#   See the "common I2C settings" section for a description of the
#   above parameters.
#min_temp: 0




#######################################
#### Exhaust Temp Sensor Section ####
#######################################
[thermistor exhaust_temp]
temperature1: 25
resistance1: 10000
beta: 3950

#######################################
#### Electronics Temp Sensor Section ####
#######################################
[thermistor electronics_temp]
temperature1: 25
resistance1: 10000
beta: 3950

#[temperature_sensor electronics_temp] #PF6 assign to electronics_fan
#sensor_type: electronics_temp
#sensor_pin: PF6
#min_temp: -100
#max_temp: 100
#gcode_id: C

########################################
#### SB2040 MCU Temp Sensor Section ####
########################################

[temperature_sensor SB2040_MCU]
sensor_type: temperature_mcu
sensor_mcu: sb2040

########################################
#### SB2040 PCB Temp Sensor Section ####
########################################

#[temperature_sensor sb2040_chamber]
#sensor_type = Generic 3950
#sensor_pin: sb2040


#sensor_type: ATC Semitec 104GT-2     # 10/29/24 was ATC Semitec 104GT-2
#pullup_resistor: 4700 ; 4700 is the klipper default (not specified by Mellow).  10000-12000 seems to produce more realistoc temp.

#####################################################################
#   Toolhead Filament Sensor
#####################################################################

#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: False
#switch_pin: ^sb2040:gpio28   #6/22/24 was gpio25

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Part Cooling Fan - FAN0
pin: sb2040:gpio13
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
max_power: 1.0
shutdown_speed: 0.0
off_below: 0.10

[heater_fan Hotend_Fan]
##  Hotend Fan - FAN1
pin: sb2040:gpio14
max_power: 1
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1

[controller_fan SB2040_Fan]  #10/29/24 was [temperature_fan SB2040_Fan]
pin: sb2040:gpio15
kick_start_time: 0.5
heater: heater_bed
max_power: 1
shutdown_speed: 0.0
off_below: 0.10

#sensor_type: ATC Semitec 104GT-2     # 10/29/24 was ATC Semitec 104GT-2
#pullup_resistor: 4700 ; 4700 is the klipper default (not specified by Mellow).  10000-12000 seems to produce more realistoc temp.
#sensor_pin: sb2040:gpio26
#control: watermark
#min_temp: -50
#max_temp: 350
#target_temp: 35
#shutdown_speed: 0.0

#[temperature_fan SB2040_Fan]
#pin: sb2040:gpio15
#max_power: 1
#kick_start_time: 0.5
#sensor_type: ATC Semitec 104GT-2     # 10/29/24 was ATC Semitec 104GT-2
#pullup_resistor: 4700 ; 4700 is the klipper default (not specified by Mellow).  10000-12000 seems to produce more realistoc temp.
#sensor_pin: sb2040:gpio26
#control: watermark
#min_temp: -50
#max_temp: 350
#target_temp: 35
#shutdown_speed: 0.0

[temperature_fan electronics_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
sensor_type: electronics_temp
sensor_pin: PF6
control: watermark
max_power: 0.40
min_temp: 0
max_temp: 50
target_temp: 25.0
shutdown_speed: 0.0

[controller_fan nevermore_chamber_fans]  
pin: PD15
kick_start_time: 0.5
heater: heater_bed
max_power: 1


[temperature_fan trident_chamber_temp]  # using Toolhead PCB thermistor and exhaust fan
pin: PD14
kick_start_time: 0.1
sensor_type: Generic 3950  #10/29/24 was exhaust_temp - default was ATC Semitec 104GT-2, if referencing chamber_temp from below doesn't work then enter NTC 10K beta 3950
pullup_resistor: 5200 ; 4700 is the klipper default (not specified by Mellow).  
sensor_pin = sb2040:gpio26  #10/29/24 was sensor_pin: PF7

min_temp: 0  
max_temp: 80
#SET_TEMPERATURE_FAN_TARGET temperature_fan=trident_chamber_temp [target=chamber] [min_speed=0.3] [max_speed=1]:  #doesn't work, need to work on customer slicer gcode and this to pass the chamber temp parameter
target_temp: 60    #10/29/24 was 45 - set as 40 for testing and to determine if "chamber"parameter correctly passes from Slicer gcode
control: watermark
gcode_id: chamber
off_below: 0.10 # 10/27/24 reduced to 0.1 to help with printer preheat speed, 11/13/22 revised to 0.24 from .25 to allow for a constant on min_speed (see below) at 0.25
shutdown_speed: 0
#cycle_time: 0.00004  #leave commented out for now
max_power: 1  #default is 1 but may want to ultimately sett lower (like 0.65) as the exhaust fan at full power is quite loud and likely more exhaust than what is needed
min_speed: 0.11  # 10/27/24 reduced to 0.11 to help with printer preheat speed, 9/1/24 - revised from 0.25 to 0.5 to improve ehaust and TVOC levels -  11/12/22, revised from 0.00 to 0.3, 11/13/22 revised from 0.3 to 0.4 as 0.3 was noisy
control = pid
#max_delta: 2.0  #leave commented out
pid_kp = 20  # these PID values are from milimbar's example.  I'm not sure where they came from or if they are good for my sensor/fan
pid_ki = 2
pid_kd = 0.1

#you can select the target temp with M141 in your print start gcode - actually I am getting "CHAMBER = 55" based on having "CHAMBER=[chamber_temperature]" in my custom printer g-code and it is picking it up from my filament settings


#SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" [target=<target_temperature>] [min_speed=0.3] [max_speed=1]: 
#SET_TEMPERATURE_FAN_TARGET temperature_fan=<temperature_fan_name> [target=<target_temperature>] [min_speed=<min_speed>] [max_speed=<max_speed>]: 
#Sets the target temperature for a temperature_fan. If a target is not supplied, it is set to the specified temperature in the config file. If speeds are not supplied, no change is applied.


#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[homing_override]

axes: xyz

gcode:
    G90
#   Home X
    G4 P2000
    G28 X0
    G1 X345 F6000

#   Home Y
    G28 Y0 F6000
#    G1 Y353 #was 356

#    Home Z
     G1 X175 Y 175 F6000 # was G1 X192 Y 356 before TAP
     G28 Z0
     G1 Z5 F1500
#    G1 X345 Y345

[idle_timeout]
timeout: 2700

#[safe_z_home]  # 2/23/24 commented out because can't have [homing_override] and [safe_z_home] simultaneously
##  XY Location of the Z Endstop Switch
##  Location Definition step.
#home_xy_position:175,175 # 2/23/24 commented out
#speed:100 # 2/23/24 commented out
#z_hop:10 # 2/23/24 commented out

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

z_positions:
   -50, 18
   175, 398
   400, 18
points:
   30, 5  # 12/20/22 adjusting for TAP, was 30, 5
   175, 345  # 12/20/22 adjusting for TAP, was 175, 295
   320, 5

speed: 200
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#---------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


#--------------------------------------------------------------------



###############################################################################################################################################################
#   Macros
###############################################################################################################################################################
###############################################################################################################################################################
###############################################################################################################################################################

[gcode_macro DONT_SHUTDOWN]

gcode =

      M117 AUTO-SHUTDOWN OFF!


[gcode_macro PREHEAT]
gcode = 

      M117 PREHEAT MACRO INVOKED!


      {% set T_CHAMBER = params.T_CHAMBER|default(60)|float %}   ; This target can be set with the drop-down in Mainsail
      SET_TEMPERATURE_FAN_TARGET temperature_fan=trident_chamber_temp min_speed=0 ;10/31/24 - added to counteract/reset previous 100% speed setting in end_print macro for purging chamber after print completion
	
      SET_CHAMBER_FAN CHAMBER_TEMP={T_CHAMBER}
      SET_IDLE_TIMEOUT TIMEOUT=7200

        M106 S255 ;set part cooling fan at 100% to add with temperature stabilization

        M140 S120 ; set bed temp and don't wait  ; set bed hot to accelerate the heating of the chamber

        TEMPERATURE_WAIT SENSOR="temperature_fan trident_chamber_temp" MINIMUM={T_CHAMBER-10 | float}  # wait for chamber to get to within 5 degress of target


        M140 S110 ; set bed temp and don't wait - this is my standard for ABS
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=105 ; MAXIMUM=115 

        M104 S150 ; set extruder temp for TAP
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM=145 MAXIMUM=160  ; provide a range so you are not waiting to settle
 
        ENSURE_HOMED

        G1 X100 Y0 Z40 F3000                   ; move nozzle away from bed

	M117 INITIALIZING MMU!

        MMU_HOME

        M117 Preheated & Ready!



[gcode_macro ENSURE_HOMED]

gcode = 
	{% if printer.toolhead.homed_axes != "xyz" %}
          M104 S150 ;set extruder temp don't wait for TAP (M109 is wait)
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM=145 MAXIMUM=160
          M117 Homing XYZ!
          G28
          M117 El Tigre Homed!

	{% endif %}

 	{% if printer.z_tilt.applied|lower == 'false' %}  ;2/24/24 - trying this
	  STATUS_LEVELING
          M104 S150 ;set extruder temp don't wait for TAP (M109 is wait)
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM=145 MAXIMUM=160
          M117 Z-Tilt Underway!
          Z_TILT_ADJUST
          M117 Z-Tilt Complete!

	{% endif %}	


[gcode_macro START_PRINT]
variable_t_bed = 0
variable_t_extruder = 0
variable_t_extruder_standby = 0

gcode = 

    M117 START PRINT MACRO INVOKED!

    SET_TEMPERATURE_FAN_TARGET temperature_fan=trident_chamber_temp min_speed=0.11 ;10/31/24 - added to counteract/reset previous 100% speed setting in end_print macro for purging chamber after print completion
	

    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}

    {% if REFERENCED_TOOLS == "!referenced_tools!" %}
        RESPOND MSG="Happy Hare gcode pre-processor is diabled"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% elif REFERENCED_TOOLS == "" %}
        RESPOND MSG="Happy Hare single color print"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% endif %}


	
	{% set NOZZLE_DIAMETER = params.NOZZLE_DIAMETER | default(0.4) | float %}
	{% if NOZZLE_DIAMETER != printer.configfile.settings.extruder.nozzle_diameter | float %}
	  M117 Klipper nozzle_diameter set to a different value than slicer!
	  CANCEL_PRINT
	{% else %}
	  {% set INITIAL_TOOL = params.TOOL|default(0)|int %}
	  {% set T_BED = params.T_BED|default(110)|float %}
	  {% set T_EXTRUDER = params.T_EXTRUDER|default(255)|float %}
	  {% set T_CHAMBER = params.T_CHAMBER|default(60)|float %}
#	  {% set T_EXTRUDER_STANDBY = params.T_EXTRUDER_STANDBY|default(0)|float %} ; gpw commented out
	
	  {% set T_CHAMBER_INITIAL = [ T_CHAMBER, 60] | min %} ; Cam's
	
	  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=t_bed VALUE={ T_BED }
	  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=t_extruder VALUE={ T_EXTRUDER }
#	  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=t_extruder_standby VALUE={ T_EXTRUDER_STANDBY } ;2/24/24 Cam's - commented out
	
#	  nevermore_sync_control ENABLE=0 ;2/24/24 Cam's - commented out
#	  SET_FAN_SPEED FAN=nevermore SPEED=1 ;2/24/24 Cam's - commented out

	  SET_IDLE_TIMEOUT TIMEOUT=7200
	
	  SET_CHAMBER_FAN CHAMBER_TEMP={T_CHAMBER}

	  TEMPERATURE_WAIT SENSOR="temperature_fan trident_chamber_temp" MINIMUM={T_CHAMBER-10 | float}
	
	  STATUS_HEATING

          M117 START PRINT MACRO COMPLETE!


	{% endif %}

        STATUS_PRINTING  

        M117 PRINTING!




	

[gcode_macro rewinder_test]
gcode:
    MMU_TEST_LOAD LENGTH=50
    {% for n in range(20) %}

# cycles currently set at 20, i.e. range(20).  You can changes this however you chose.
        MMU_SERVO POS=DOWN
#        MANUAL_STEPPER STEPPER="gear_stepper" SPEED=300 ACCEL=400 MOVE=800
        MMU_TEST_MOVE SPEED=300 ACCEL=400 MOVE=800
# change the SPEED and ACCEL as you see fit
        MMU_SERVO POS=UP
# to stop a macro mid-cycle you must use the e-stop.  This dwell allows you to hit the e-stop while the servo is up so that you can pull the filament out of the ERCF while the printer/macro is stopped
        MMU_SERVO POS=DOWN
        MMU_TEST_MOVE SPEED=300 ACCEL=400 MOVE=-800
        MMU_SERVO POS=UP

    {% endfor %}



[gcode_macro QUERY_BME280]
gcode:
    {% set sensor = printer["bme280 Filament_Enclosure"] %}
#    {action_respond_info(
#        "Temperature: %.2f C\n"
#        "Pressure: %.2f hPa\n"
#        "Humidity: %.2f%%" % (
#            sensor.temperature,
#            sensor.pressure,
#            sensor.humidity))}
    {action_respond_info(
        "Temperature: %.2f C\n"
#        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.humidity))}




[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
zero_reference_position: 175,175 #for use with stock z endstop


fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[input_shaper]
shaper_freq_x: 52 ; 8/9/24 was 31.2 mzv, average of 5 points on bed, 1/12/23 was 55.6, zv at 50.8 recommended but switching mack to mzv with 31.2 after evaluating zv based print
shaper_freq_y: 34.8 ; 8/9/24 was 36.6 mzv, average of 5 points on bed, 1/12/23 was 36.8
shaper_type_x: mzv ; 8/9/24 was mzv, 1/12/23 was mzv, zv recommended but switching mack to mzv after evaluating zv based print
shaper_type_y: mzv ; 8/9/24 was mzv, 1/12/23 was mzv





# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }

	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED ;delete to here after max speed test





[gcode_macro M600]
gcode:
	#LCDRGB R=0 G=1 B=0	# Turn LCD green
	PAUSE
	


[gcode_macro _START_PRINT_toolchange_check]
gcode = 
	{% set INITIAL_TOOL = params.INITIAL_TOOL | int %}
	{% set BED_SOAK_TARGET = params.BED_SOAK_TARGET | float %}
	{% set T_CHAMBER_INITIAL = params.T_CHAMBER_INITIAL | float %}
	{% if (printer.mmu.tool != INITIAL_TOOL) or (printer.mmu.filament != "Loaded") %}
	CANCEL_PRINT
	{% else %}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
	STATUS_HEATING
#	HEAT_SOAK BED_TARGET={BED_SOAK_TARGET} CHAMBER_TARGET={T_CHAMBER_INITIAL} ; 2/24/24 - Heat soak macro not in config yet
	{% endif %}



[gcode_macro status_toolchange]
gcode = 
#	STOP_LED_EFFECTS    ;2/24/24 - error - Unknown command:"STOP_LED_EFFECTS"
#	SET_LED_EFFECT EFFECT=sb_logo_toolchange  ;2/24/24 - error - Unknown command:"STOP_LED_EFFECTS"
#	SET_LED_EFFECT EFFECT=sb_nozzle_toolchange  ;2/24/24 - error - Unknown command:"STOP_LED_EFFECTS"


[gcode_macro END_PRINT]
gcode = 
	
	{% set th = printer.toolhead %}
	{% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
	{% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
	{% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	
	M400
	G92 E0
	G10
	MMU_EJECT
#	clean_nozzle do_purge=0 do_wipe=1 ; 2/24/24 GPW COMMENTED OUT
	
#	SET_CHAMBER_FAN
	TURN_OFF_HEATERS

        SET_TEMPERATURE_FAN_TARGET temperature_fan=trident_chamber_temp min_speed=1 ;10/30/24 - added to purge chanmber after print completion
	
	G90
#	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600
# 	G0 X{th.axis_maximum.x - 20} Y{th.axis_maximum.y - 20} F3600
 	G0 X{th.axis_minimum.x + 3} Y{th.axis_maximum.y - 5} F3600

	M107
	
	BED_MESH_CLEAR
	
#	STATUS_PART_READY ; gpw - not defined in stealthburner_leds.cfg
	
#	nevermore_sync_control ENABLE=1
	
	RESTORE_GCODE_STATE NAME=STATE_PRINT_END





[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
#   M117 Homing...                 ; display message
#   G28
#   Z_TILT_ADJUST
#   G28


#     G0 X175 Y175 Z30 F3600  ; 2/24/24 - this was the only active line
    #--------------------------------------------------------------------


# From the ercf_hardware.cfg:
#  Note that you should adapt your Print_Start macro to ensure that :
#  The filament sensor is turn OFF at the very begining of your print start (i.e. SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0) - done in SuperSlicer
#  The filament sensor is turn ON just before the real print starts (i.e. SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1) - done below
#  You will have to make sure the sensor is properly turned ON or OFF at the proper moments by yourself - ??

# SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1 ; 10/16/22 10:24 PM uncommented based on the above statement from the manual.  The ENABLE=0 is in the slicer print_start macro

# CLEAR_PAUSE ; added per manual pg 116 but wondering if it belongs in the print_start macro in printer.cfg (which is currently commented out).  Perhaps all of the below should be in printer.cfg??



#[gcode_macro PRINT_END] ; commented out 2/24/24
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#gcode:

#    {% set unload = params.UNLOAD_AT_END|default(0)|int %} ; 2/13/24 commented out for non-ERCF printing
#   SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

    # safe anti-stringing move coords
#    {% set th = printer.toolhead %}
#    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}    
#    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#    M400                           ; wait for buffer to clear
#    G92 E0                         ; zero the extruder
#    G1 E-2.0 F3600                 ; retract filament
    
#    TURN_OFF_HEATERS

#	{%set z_park = [th.position.z + 50, th.axis_maximum.z]|min %} ; safely move away from and above print
    
#    G90                                      ; absolute positioning
#    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
#    G0 X250 Y350 Z{z_park} F3600  ; park nozzle at rear
#    M107                                     ; turn off fan

  

# [gcode_macro start_filament_gcode]

# do I need to add this to point to the SS Filament Settings Custom G-code string set_pressure_advance=0.03  










[pause_resume]
recover_velocity: 300.0

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE

#  SDCARD_RESET_FILE  ; this was causing an error "SDCARD_RESET_FILE cannot be run from the sdcard

#  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#  {% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %} 
  {% set x_park = printer.toolhead.axis_minimum.x|float + 7.0 %} ; 3/11/24 - revised for Blobifier position - 1/5/23 was {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 40.0 %}   ; 3/11/24 - revised for Blobifier position - 1/5/23 was {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 30.0) %}
      {% set z_safe = 30.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
# SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set x_park = printer.toolhead.axis_minimum.x|float + 7.0 %} ; 3/11/24 - revised for Blobifier position - 1/5/23 was {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + 40.0 %}   ; 3/11/24 - revised for Blobifier position - 1/5/23 was {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 5.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G92 E0
  G1 E-1.0 F1500.0
  G90
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
#    {% if printer.mmu.is_paused|int == 1 %} ; 2/13/24 commented out for non-ERCF mode
#        M118 You can't resume the print without unlocking the MMU first. ; 2/13/24 commented out for non-ERCF mode
#        M118 Run MMU_UNLOCK and solve any issue before hitting Resume again ; 2/13/24 commented out for non-ERCF mode
#    {% else %} ; 2/13/24 commented out for non-ERCF mode
        RESTORE_GCODE_STATE NAME=PAUSE_state
        G90
#        {% if printer.mmu.clog_detection|int == 1 %} ; 2/13/24 commented out for non-ERCF mode
#           SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1 ; 2/13/24 commented out for non-ERCF mode
#        {% endif %} ; 2/13/24 commented out for non-ERCF mode
        BASE_RESUME
#    {% endif %}  ; 2/13/24 commented out for non-ERCF mode







[gcode_macro SET_CHAMBER_FAN]
gcode = 
	{% set chamber_target = params.CHAMBER_TEMP|default(0)|float %}
#	SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber_fan target={chamber_target} ; 2/24/24 gpw - this didn't work
	SET_TEMPERATURE_FAN_TARGET temperature_fan=trident_chamber_temp target={chamber_target} ; trying this



[gcode_macro SOAK_COMPLETE]
gcode = 
	{% set print_start = printer["gcode_macro START_PRINT"] %}
	{% set T_BED = print_start.t_bed | float %}
	{% set T_EXTRUDER = print_start.t_extruder | float %}
#	{% set DO_PURGE = print_start.do_purge | int %} ; 2/24/24 GPW COMMENTED OUT
	
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	
	M106 S0
	
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ T_BED }
	
#	M117 Clean Nozzle 240C ; 2/24/24 GPW COMMENTED OUT
#	STATUS_HEATING ; 2/24/24 GPW COMMENTED OUT
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240 ; 2/24/24 GPW COMMENTED OUT
#	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=240 ; 2/24/24 GPW COMMENTED OUT
#	STATUS_CLEANING ; 2/24/24 GPW COMMENTED OUT
#	CLEAN_NOZZLE ; 2/24/24 GPW COMMENTED OUT
	
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={T_BED-1 | float} MAXIMUM={T_BED+1 | float}
	
	STATUS_LEVELING
	
	G28
#	QUAD_GANTRY_LEVEL ; 2/24/24 GPW COMMENTED OUT
        Z_TILT_ADJUST ; 2/24/24 GPW ADDED
	M117 Re-Homing Z
#	STATUS_COOLING ; GPW - NOT DEFINED IN STEALTHBURNER_LEDS.CFG
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=150
	STATUS_HOMING
	G28 Z
	
	STATUS_MESHING
	M117 Bed Mesh Calibration
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	
	STATUS_HEATING
	M117 Preheat (Print)
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={T_BED}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={T_EXTRUDER}
	
	
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={T_BED}
	
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={T_EXTRUDER}
	
	STATUS_PRINTING
	
#	{% if DO_PURGE %} ; 2/24/24 GPW COMMENTED OUT
#	VORON_PURGE ; 2/24/24 GPW COMMENTED OUT
#	{% endif %} ; 2/24/24 GPW COMMENTED OUT




#[gcode_macro SOAK]
#   heat up the bed and have the toolhead high enough to stay alive, yet keep up some temp readings
#gcode:
#    STATUS_HEATING
#    M140 S110                      ; start the heater for 110
#    M106 S255                      ; Start fan at 100% to spread warm air
#    G32                            ; home all axes
#    G1 Z40 F3000                   ; move nozzle away from bed 
#    #SET_FAN_SPEED FAN=Nevermore SPEED=0.9



# Disable filament sensor 1 sec after startup, only enable during prints (in PRINT_START/PRINT_END)
#[delayed_gcode DISABLEFILAMENTSENSOR]	
#initial_duration: 1
#gcode:
	#SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0


#[gcode_macro M141]
#gcode:
  ;take the paramater S of M141 and store it as CHAMBER. If S is not provided, set as 21c.
#  {% set CHAMBER = params.S|default(21)|float %}
#  ;set heater my_chamber_heater equal to M141 S parameter by setting equal to CHAMBER_TEMP.
#  SET_HEATER_TEMPERATURE temperature_fan=trident_chamber_temp [TARGET={CHAMBER}]

# [extruder] from PID ran at 245C 60% fan on 3/13/24 (would not settle down to target)
# control = pid
# pid_kp = 18.641
# pid_ki = 1.635
# pid_kd = 53.129  lovering kd to 50.129 seemed to help it settle to target a little faster
#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.534
#*# pid_ki = 1.595
#*# pid_kd = 72.679
#*#
#*# [stepper_z]
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.453
#*# pid_ki = 1.695
#*# pid_kd = 253.384
#*#
#*# [probe]
#*# z_offset = -0.390
#*#
#*# [input_shaper]
#*#
#*# [bed_mesh Cold to 110C Textured]
#*# version = 1
#*# points =
#*# 	-0.000625, 0.023750, 0.055625, 0.038125, 0.041250, 0.051875, 0.030000
#*# 	-0.024375, 0.003125, 0.012500, 0.050625, 0.069375, 0.073125, 0.054375
#*# 	-0.027500, -0.002500, -0.001875, 0.038750, 0.035000, 0.032500, 0.016250
#*# 	-0.084375, -0.028125, 0.013750, 0.000000, -0.005000, 0.014375, 0.000625
#*# 	-0.106875, -0.038750, -0.032500, 0.003750, 0.028125, 0.027500, 0.018750
#*# 	-0.093125, -0.052500, -0.028750, -0.010000, 0.021250, 0.018125, 0.023125
#*# 	-0.105000, -0.036875, 0.001250, 0.033125, 0.044375, 0.068750, 0.031875
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh Medium Soak Smooth]
#*# version = 1
#*# points =
#*# 	0.019375, 0.039375, 0.060000, 0.061875, 0.075625, 0.067500, 0.035625
#*# 	-0.005000, 0.026250, 0.038750, 0.056250, 0.063125, 0.062500, 0.023750
#*# 	-0.036875, 0.006250, 0.031250, 0.035625, 0.038125, 0.038750, 0.002500
#*# 	-0.078750, -0.036250, -0.014375, 0.000000, 0.005625, 0.008750, -0.040625
#*# 	-0.093125, -0.043750, -0.023125, -0.005625, -0.004375, -0.003750, -0.038750
#*# 	-0.107500, -0.061250, -0.013750, -0.003125, -0.011250, -0.005625, -0.039375
#*# 	-0.101875, -0.044375, 0.001875, 0.017500, 0.028125, 0.034375, 0.006875
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh Medium Soak Textured]
#*# version = 1
#*# points =
#*# 	0.017500, 0.060000, 0.088750, 0.072500, 0.080000, 0.085625, 0.062500
#*# 	0.001875, 0.030000, 0.065625, 0.091875, 0.071875, 0.064375, 0.044375
#*# 	-0.012500, 0.020625, 0.051875, 0.074375, 0.065000, 0.038750, 0.035625
#*# 	-0.057500, -0.021250, 0.036875, 0.000000, 0.041875, 0.041875, 0.003750
#*# 	-0.038750, -0.027500, -0.002500, 0.050000, 0.018125, 0.024375, 0.000625
#*# 	-0.109375, -0.011875, -0.012500, 0.031250, 0.038125, 0.024375, 0.047500
#*# 	-0.070000, -0.030625, 0.018125, 0.045000, 0.066250, 0.068750, 0.023750
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.113125, 0.093125, 0.115000
#*# 	0.092500, 0.106875, 0.085000
#*# 	0.105625, 0.061875, 0.087500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 237.3
#*# max_x = 309.98
#*# min_y = 40.0
#*# max_y = 110.74
